name: Tests

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - '*'
  # pull_request:
  # schedule:
  #   - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    strategy:
      fail-fast: true
      matrix:
        php: [8.3, 8.4]

    name: PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure Laravel storage and cache directories exist
        run: |
          mkdir -p bootstrap/cache
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/views
          mkdir -p storage/logs

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: gd, pdo, zip, exif, bcmath, opcache, calendar, pdo_mysql, pdo_sqlite
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare Laravel Application
        run: |
          cp .env.ci.testing .env
          php artisan key:generate
      - name: Execute tests
        env:
          XDEBUG_MODE: coverage
        run: composer test

      - name: Sync with latest main
        run: |
          git fetch origin main
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git reset --soft origin/main

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: code_coverage_badge.svg
          push_badge: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
